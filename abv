CAN总线网络的入侵检测系统方案


1.项目背景
现阶段的车载网络有CAN、LIN、MOST和FlexRay四种总线网络，CAN总线在汽车控制中占主导作用，车载网络的安全性问题页集中在CAN总线的安全性上。2017年发布的《车联网网络安全白皮书》指出“CAN总线安全风险在于：一是通信缺乏加密和访问控制机制，可被攻击者逆向总线通信协议，分析出汽车控制指令，用于攻击指令伪造；二是缺乏认证及消息校验机制，不能对攻击者伪造、篡改的异常消息进行识别和预警”。可见CAN总线网络是容易遭受攻击的，且目前缺乏针对CAN总线的安全防护。
安全的网络通信是网联汽车发展的基础，汽车信息安全问题是汽车行业必须面对和解决的任务，分析网联汽车的信息安全问题，研究车载总线网络的信息安全防护技术是汽车研究领域及产业领域的共同需求。
车载总线连接着汽车控制系统的电控节点，这些节点被攻击可能产生非常严重的后果，现有的CAN总线协议缺乏基本的安全策略，若遭受攻击验严重危害车辆驾驶员、乘客及交通参与者的人身和财产安全。建立对于CAN总线网络的入侵检测系统是十分必要的。

2.需求描述及分析
 2.1 需求分析目标和任务
本入侵检测系统要求能对CAN总线网络的报文检测，识别并对异常事件进行告警和日志记录。以太网的数据不在系统检测范围内。
 2.2 需求描述
      分为终端和管理平台两块。
      入侵检测终端：
     （1）数据分析
能准确识别以下5种CAN总线网络中的入侵行为：
1）注入，分为普通注入、Fuzzing、畸形报文注入、诊断报文注入。从任意节点向网络中注入CAN消息，Fuzzing即模糊测试，发送异常输入扫描系统漏洞。畸形报文注入：网络中注入违反CAN总线协议的报文。诊断报文注入：注入诊断报文，实现采集信息或者控制汽车。
2）篡改：控制某ECU后，篡改该ECU进入网络的CAN包；控制网关后，篡改网关转发的CAN包。
3）丢弃：控制某ECU后，关闭CAN收发器，使ECU掉线；控制网关后，不转发一些关键消息，使ECU失效；
4）重放：在适当时机向网络中注入已经窃取的CAN消息，分为车内CAN消息重放和车外向车内的CAN消息重放。
5）DOS：拒绝服务攻击，大量高优先级报文抢占总线。
（针对CAN总线网络的窃取和监听无明显异常特征，系统不对其识别。）
（2）安全告警
     对入侵行为进行告警、记录、将结果可视化呈现。
     （3）性能要求
误报率、漏报率在应用许可的15%以下。
能快速处理获取的CAN帧。
（4）其余附加功能
1）防躲避能力：攻击报文分片、分段。
2）阻断能力：阻断攻击报文的转发。
3）定制响应：不同终端响应不同。
4）排除响应：指定终端不予告警。
5）告警方式：屏幕实时提示、e-mail、系统日志。
6）端口分离：配置不同的端口分别用于产品管理和网络数据监听。
7）防火墙联动：按联动策略调整防火墙配置。
8）自我隐藏：隐藏探测器IP地址。
9）事件合并：高频度相同安全事件合并告警。
10）事件关联：同类不同安全事件关联，大量同类低危害事件可能隐含高危害。
11）全局预警：局部出现重大安全事件报告上级。
12）其他网络设备联动。
13）硬件失效处理。
14）自检。
管理平台
（1）图形界面：显示检测结果及相关信息。
（2）策略配置：配置、更新规则库。
（3）事件记录：与检测终端共同完成安全事件和检测过程记录。
（4）事件数据库：以数据库形式存储相关事件。
（5）超时锁定、会话锁定。
（6）通信保密：加密终端与平台的通信，同时日志存储加密。
（7）其余功能
1）权限管理：对系统、用户、管理员权限设置。
2）事件分级：对安全事件分为高中低危险程度预警。
3）功能升级。
4）流量监测。
5）还原能力。

3.系统架构
基于CAN总线的入侵检测系统，一般以安全组件的方式部署在网关和ECU中实施，或者以单独的硬件形式部署于车内。本系统部署在网关和ECU中，结果呈现及后台规则更新部署在TBox/IVI上。



CAN总线网络入侵检测系统，由两个主要部分组成，一个部署在CAN网关上的核心入侵检测程序，而是在TBox/IVI上的代理程序，负载CAN网络与后台服务器通的代理。

4.系统功能及实现
4.1 数据分析
（1）数据采集
对象：从链路层采集数据，采集的数据为CAN帧。
    原理概述：将CAN网关与TBox、IVI、OBD盒子等外部联网设备连接的接口定义为CAN0，CAN网关与一个CAN总线子网络连接的接口定义为CAN1。车外进入车内的CAN消息是从TBox、IVI、OBD盒子进入网关，被标记为来自CAN0接收入缓存中，先后经过规则检测模块。车内子网的CAN消息是从CAN子网络进入网关，标记来自CAN1接口接收入缓存，先后经过负载率检测、规则和状态机检测模块。
数据采集的具体方法有两种，分为报文直采和报文拷贝:
1）报文直采。
对应需求分析中的“阻断能力”，可阻断认定的攻击报文转发。与snort的netfilter_queue数据采集方式相似，在CAN的中端服务程序中实现入侵检测，不提供额外缓存，可对检测结果裁定决定是否丢弃CAN帧和将CAN帧继续传递给CAN网络层和应用层。
使用到的第三方库：Ibnfnetlink，libnetfilter_queue。
2）报文拷贝。
    与snort的pcap数据采集方式相似，在接收中断服务程序中，拷贝数据报文（CAN帧）到预定义缓存中，对缓存中数据进行检测（可用循环队列存储数据）。
使用到的第三方库：LibPcap。

（2）数据预处理
针对CAN报文解析，CAN报文格式如下。

     
                          图4.1 CAN数据帧（标准帧）格式


图4.2 CAN数据帧（扩展帧）格式

如图4.1和4.2，CAN总线报文由如下各部分组成：1bit帧起始（SOF），11bit标准帧ID或29bit扩展帧ID,1bit标识符扩展位IDE（指示是否用扩展格式），6bit控制域（指示附带数据字节长度），一个CAN数据帧可携带0~8个字节的数据，数据域后是16bit的CRC校验码、2bit的ACK应答厂及7位的帧结束（EOF）。
入侵系统对CAN帧需要解析出的部分是：
1）ID域：标准帧11bit,扩展帧29bit。ID定义优先级，ID越小，CAN帧的优先级越高。
2）DLC域：占用4bit,指定消息中Data域长度，通常设为8，没有使用到的data字节以0填充。
3）Data域:0~8字节，具体含义由ID和DLC确定。
入侵检测系统分别对这3部分进行解析和检测。

将CAN帧解析结果放入以下结构体：
Typedef struct _CanFrame{
       uint8 can_n;   //表示CAN帧来源，CAN0/CAN1
       uint32 id;     //CAN_ID
       uint8 length;  //DLC域
       uint8 data[8];  //DATA域
}CanFrame;

（3）检测引擎入口
     根据系统是入侵检测模式还是入侵防御模式。
1）入侵防御模式，使用报文直采的方式，在CAN驱动层代码can.c文件Can_RxProcess()增加对入侵检测引擎的调用，即instrusionDefense()，将CAN帧的ID、DLC和Data域分别传入检测引擎，根据函数返回结果判断是否将该帧传给上层网络，在此实现对意图攻击的CAN帧的阻断。
2）入侵检测模式，以定时任务的方式调用入侵检测引擎轮询CAN接收缓存。instrusionDefense()取得解析后的CAN帧传入检测引擎。
（4）基于规则的入侵检测
     1）字节级别的文本规则解析
      因CAN总线协议限制，规则必须转为二进制。在TBox/IVI上完成对文本规则的解析，完成解析文本规则字符串，并且生成二进制规则。
     2）二进制格式的规则解析
    在CAN网关实现二进制格式规则的解析。二进制规则的字节流从TBox/IVI传输到CAN网关后，网关对其进行解析。
     3）字节级别规则匹配
     处理后的CAN帧与解析后的规则进行匹配，分别匹配CAN_ID字段、DLC字段、CAN Data字段。比较CAN Data的各个字节是否与规则中的定义相等。
     
    4）位级别规则解析（插件形式，可选）
     规则解析即构造规则链表，链表第一层为eventType事件类型，设计Alert和Drop两种，Alert为发现威胁后告警，Drop为发现威胁后丢包。第二层为规则头链表，每一个规则头节点代表一类CAN ID和DLC，以CAN ID和DLC范围对规则进行分类。捕获的CAN帧遍历规则头结点，在存储的范围内进入第三层。链表第三层为规则选项链表，链表每一个节点存储一条规则的所有规则检测函数，组成一条函数链。
5）位级别规则匹配（插件形式，可选）
第一层规则类型匹配，分为alert和drop两类，实际包从第二层规则头匹配开始，先匹配alert的所有规则，再匹配drop的所有规则。规则头匹配，分为CAN ID检查、DLC范围检查，确认该报文是否是本规则要进行规则选项检查的报文，匹配成功再进一步发给规则匹配选项层检测，检测结果返回规则头匹配层，判定是否进行记录与告警，根据alert和drop类型执行对应的事件相应。
（5）负载率检测（属于异常检测）
     针对Dos攻击和fuzzing模糊测试等具有大量CAN消息注入的攻击。
     统计从网关通过的CAN帧数量，周期性计算CAN总线负载率，将计算的负载上传至TBox/IVI。
     检测步骤如下：
1）数据传输量统计：只统计CAN帧中的标准帧和扩展帧，计算单位时间内实际传送的报文所占的位数。
2）负载率计算：周期性计算CAN总线负载率，并对过往数据进行清零。
3）负载率上传：负载率上传至TBox/IVI，再转发至后台服务器，服务器对负载率进行可视化显示和阈值标定。
4）负载率异常检测：负载率与厂商标定阈值范围比较，超出范围则判断异常，进入记录和告警模块。
5）阈值更新：后台实时分析负载率之后，对阈值进行标定，将标定后的阈值下发至本模块。

实际传送位数=理论长度+填充长度+帧间隔=（帧起始+仲裁字段+控制字段+CRC字段+ACK字段+帧结束+数据长度）+[（帧起始+仲裁字段+控制字段+CRC字段+数据长度)/填充比特前位数）]+帧间隔

负载率=总位数/(波特率*时间*1000）
     
4.2 安全告警（需终端与平台协同）
   入侵检测系统对检测到的异常事件响应方式有以下三种：
1）记录：将异常事件写入日志；
2）告警：将异常事件发往后台进行告警显示；
3）阻断：丢弃报文。
阻断属于IPS入侵防御系统的事件响应方式，前提是报文采集时选择了报文直采方式，阻断报文也会写入日志和向后台告警。
日志记录与告警需要从ECU何CAN网关传输检测引擎检测到的事件，涉及到ECU、CAN网关、TBox和后台服务器四者之间的通信。
ECU发送器：将异常事件ID通过CAN总线发送给网关接收器。
网关接收器：接收ECU发送器发送的CAN数据，解析出异常事件ID。
网关发送器：将异常事件ID通过CAN总线发送给TBox接收器。
TBox/IVI接收器：接收网关发送器发送的CAN数据，解析出异常事件ID.
TBox/IVI转换器：根据异常事件ID从异常事件map文件中读取到异常事件各项数据，传给TBox发送器。
TBox/IVI发送器：将异常事件数据发送给后台服务器。
受限于CAN总线网络内的传输限制，传输告警时使用二进制格式，在TBox/IVI中事先定义event.map文件，即告警事件ID与告警事件的对应关系，从ECU和网关中只需要传输告警事件ID即可在TBox/IVI中查到该事件的详细信息，然后传输记录日志或者传输到后台。

   传输告警信息中的协议，也可称为告警帧，定义如下：
设备类型      子模块                     告警事件ID                  是否传输帧

   
							
   



该传输协议TBox/IVI接收器收到此帧以后，解析出设备类型和子模块，根据告警事件ID从map文件中获取事件详细信息。TBox/IVI与后台服务器之间的传输采用https加密传输，内容格式为json格式，TBox/IVI采用的网络传输库为libcurl，加解密与https传输采用的库为openssl。
4.3 性能需求
    系统功能初步完成后，对系统处理CAN报文的能力进行测试，需满足能快速处理周期内从网关获取的CAN帧，以及对攻击行为的判定漏报率与误报率均需低于15%。
4.4 图形界面
能完整显示检测结果及相关信息。
4.5策略配置：配置、更新规则库。
   
   






规则更新时，Tbox/IVI去轮询后台服务器，获取到规则后，直接发送给CAN网关，CAN网关将规则进行存储。
4.6 事件记录
与检测终端共同完成安全事件和检测过程记录。
4.7 事件数据库
以数据库形式存储相关事件，使用MySQL数据库。
4.8 通信保密
    对从CAN网关检测到的安全事件传输到TBox等平台的过程进行加密，在网关环境中搭载的是实时操作系统，不存在openssl库的加解密，而且嵌入式环境中加解密比较耗费资源，可通过单独的硬件环境显示加解密和消息认证，使该硬件通过SPI总线与网关相连，直接为网关提供加解密与认证，参考选用算法HMAC-SHA256。
4.9 超时锁定、会话锁定。
    设定管理员登录超时重新鉴别功能。在设定的时间段内没有任何操作的情况下，锁定或终止会话，需要再次进行身份鉴别才能重新管理产品，最大超时时间仅由授权管理员设定。

5.系统测试
 针对注入、篡改、丢弃、重放：DOS攻击类型，构造出相应的测试用例，在正常CAN报文中添加这五类异常报文，按一定速率发送到CAN网关，检测对数据的处理能力，计算误报率、漏报率。
    


    
